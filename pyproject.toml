[build-system]
requires = ["setuptools>=64.0", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "bowser-insar"
authors = [{ name = "Scott Staniewicz", email = "scott.stanie@gmail.com" }]
description = "Web UI for browsing InSAR time series"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.10"

classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]

dependencies = [
  "titiler.xarray[minimal,http]",
  "starlette-cramjam",
  "boto3",
  "uvicorn",
  "typing_extensions",
  "tqdm",
  "opera-utils[disp]",
  "rioxarray",
  "matplotlib",
  "pydantic-settings",
]


# The version will be written into a version.py upon install, auto-generated
# see section: setuptools_scm
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata
# dependencies will be read from text files
dynamic = ["version"]

[project.optional-dependencies]
widget = [
  "anywidget>=0.9.0",
  "traitlets>=5.0.0",
  "requests",
  "jupyter",
  "matplotlib",
  "ipympl",
  "ipywidgets",
]
test = ["pytest", "httpx", "ipython"]

# [project.urls]
# Homepage = "https://github.com/opera-adt/bowser"
# "Bug Tracker" = "https://github.com/opera-adt/bowser/issues"
# Discussions = "https://github.com/opera-adt/bowser/discussions"
# Changelog = "https://github.com/opera-adt/bowser/releases"

# Entry points for the command line interface
[project.scripts]
bowser = "bowser.cli:cli_app"


[tool.setuptools_scm]
# https://github.com/pypa/setuptools_scm#configuration-parameters
write_to = "src/bowser/_version.py"
# https://github.com/pypa/setuptools_scm#version-number-construction
version_scheme = "no-guess-dev" # Will not guess the next version


[tool.ruff]
src = ["src"]
unsafe-fixes = true
select = [
  "A",   # flake8-builtins
  "ARG", # flake8-unused-arguments
  "C4",  # flake8-comprehensions
  "D",   # pydocstyle
  "E",   # pycodestyle (errors)
  "W",   # pycodestyle (warnings)
  "EXE", # flake8-executable
  "F",   # Pyflakes
  "I",   # isort
  "ISC", # flake8-implicit-str-concat
  "N",   # pep8-naming
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
]

ignore = [
  "D100",   # Missing docstring in public module
  "D104",   # Missing docstring in public package
  "D105",   # Missing docstring in magic method
  "D203",   # 1 blank line required before class docstring
  "D213",   # Multi-line docstring summary should start at the second line
  "N802",   # Function name should be lowercase (Titiler uses a lot of upper)
  "N803",   # Argument name should be lowercase
  "N806",   # Variable _ in function should be lowercase
  "PIE796", # Non-unique values are redundant and likely a mistake.
  "PLR",    # Pylint Refactor
  "PTH123", # `open()` should be replaced by `Path.open()`
  "PTH207", # "Replace `glob` with `Path.glob` or `Path.rglob`
]


[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
plugins = ["pydantic.mypy"]

[tool.ruff.per-file-ignores]
"**/__init__.py" = ["F403"]
"tests/**" = ["D", "N", "PTH"]


[tool.pytest.ini_options]
addopts = "-W ignore::PendingDeprecationWarning "
filterwarnings = ["error"]

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["osx-arm64"]

[tool.pixi.pypi-dependencies]
bowser-insar = { path = ".", editable = true }

[tool.pixi.dependencies]
boto3 = "*"
uvicorn = "*"
typing_extensions = "*"
tqdm = "*"
opera-utils = "*"
rioxarray = "*"
matplotlib = "*"
pydantic-settings = "*"

[tool.pixi.environments]
default = { solve-group = "default" }
widget = { features = ["widget"], solve-group = "default" }
test = { features = ["test"], solve-group = "test" }
all = { features = ["widget", "test"], solve-group = "all" }

[tool.pixi.tasks]
